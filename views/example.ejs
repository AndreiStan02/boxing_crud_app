<!-- views/layout.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            background: white;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 400px;
        }

        .form-title {
            text-align: center;
            margin-bottom: 2rem;
            color: #333;
            font-size: 2rem;
            font-weight: 300;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #555;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e5e9;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-group input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 500;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .link {
            text-align: center;
            margin-top: 1.5rem;
            color: #666;
        }

        .link a {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
        }

        .link a:hover {
            text-decoration: underline;
        }

        .message {
            padding: 12px;
            margin-bottom: 1rem;
            border-radius: 8px;
            font-weight: 500;
        }

        .message.success {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }

        .message.error {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }

        .loading {
            display: none;
            text-align: center;
            margin-top: 1rem;
        }

        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <%- body %>
    </div>

    <script>
        function showMessage(message, type = 'error') {
            const existingMessage = document.querySelector('.message');
            if (existingMessage) {
                existingMessage.remove();
            }

            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${type}`;
            messageDiv.textContent = message;

            const container = document.querySelector('.container');
            container.insertBefore(messageDiv, container.firstChild);

            // Auto-remove after 5 seconds
            setTimeout(() => {
                messageDiv.remove();
            }, 5000);
        }

        function showLoading(show = true) {
            const loading = document.querySelector('.loading');
            const btn = document.querySelector('.btn');
            
            if (show) {
                loading.style.display = 'block';
                btn.disabled = true;
                btn.textContent = 'Processing...';
            } else {
                loading.style.display = 'none';
                btn.disabled = false;
                btn.textContent = btn.dataset.originalText;
            }
        }

        async function makeRequest(url, data) {
            try {
                showLoading(true);
                
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                });

                const result = await response.json();
                
                showLoading(false);

                if (result.success) {
                    showMessage('Success! ' + (result.message || 'Operation completed.'), 'success');
                    if (result.user) {
                        console.log('User data:', result.user);
                    }
                } else {
                    showMessage(result.error || 'Something went wrong');
                }
            } catch (error) {
                showLoading(false);
                showMessage('Network error: ' + error.message);
            }
        }
    </script>
</body>
</html>

<!-- views/register.ejs -->
<h1 class="form-title">Register</h1>

<form id="registerForm">
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" name="username" required minlength="3" 
               placeholder="Enter your username">
    </div>
    
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" id="email" name="email" required 
               placeholder="Enter your email">
    </div>
    
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required minlength="8" 
               placeholder="Enter your password">
    </div>
    
    <button type="submit" class="btn" data-original-text="Register">Register</button>
    
    <div class="loading">
        <div class="spinner"></div>
        <p>Creating account...</p>
    </div>
</form>

<div class="link">
    Already have an account? <a href="/login">Login here</a>
</div>

<script>
    document.getElementById('registerForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const data = {
            username: formData.get('username'),
            email: formData.get('email'),
            password: formData.get('password')
        };

        // Basic validation
        if (data.password.length < 8) {
            showMessage('Password must be at least 8 characters long');
            return;
        }

        await makeRequest('/api/register', data);
    });
</script>

<!-- views/login.ejs -->
<h1 class="form-title">Login</h1>

<form id="loginForm">
    <div class="form-group">
        <label for="username">Username</label>
        <input type="text" id="username" name="username" required 
               placeholder="Enter your username">
    </div>
    
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" id="password" name="password" required 
               placeholder="Enter your password">
    </div>
    
    <button type="submit" class="btn" data-original-text="Login">Login</button>
    
    <div class="loading">
        <div class="spinner"></div>
        <p>Logging in...</p>
    </div>
</form>

<div class="link">
    Don't have an account? <a href="/register">Register here</a>
</div>

<script>
    document.getElementById('loginForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(e.target);
        const data = {
            username: formData.get('username'),
            password: formData.get('password')
        };

        await makeRequest('/api/login', data);
    });
</script>

<!-- views/dashboard.ejs -->
<h1 class="form-title">Welcome!</h1>

<div class="message success">
    <p>You are successfully logged in.</p>
    <% if (typeof user !== 'undefined') { %>
        <p><strong>Username:</strong> <%= user.username %></p>
        <p><strong>Email:</strong> <%= user.email %></p>
        <p><strong>Member since:</strong> <%= new Date(user.createdAt).toLocaleDateString() %></p>
    <% } %>
</div>

<button class="btn" onclick="logout()">Logout</button>

<div class="link">
    <a href="/register">Register another account</a>
</div>

<script>
    function logout() {
        // Clear any stored tokens/session data
        localStorage.clear();
        sessionStorage.clear();
        
        showMessage('Logged out successfully!', 'success');
        
        // Redirect after a short delay
        setTimeout(() => {
            window.location.href = '/login';
        }, 1500);
    }
</script>